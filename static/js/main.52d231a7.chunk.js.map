{"version":3,"sources":["components/FeedbackOptions/feedbackOptions.module.css","components/Section/index.jsx","components/Notification/index.jsx","components/FeedbackOptions/index.jsx","components/Statistics/index.jsx","components/App/index.jsx","index.js"],"names":["module","exports","Section","title","children","Notification","message","FeedbackOptions","onLeaveFeedback","className","styled","button","name","onClick","Statistics","good","neutral","bad","total","positivePercentage","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","App","state","handleClick","target","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,OAAS,kC,8GCSZC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BACE,4BAAKD,GACJC,ICDUC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,I,gBCe3BC,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACtB,oCACE,4BAAQC,UAAWC,IAAOC,OAAQC,KAAK,OAAOC,QAASL,GAAvD,QAGA,4BAAQC,UAAWC,IAAOC,OAAQC,KAAK,UAAUC,QAASL,GAA1D,WAGA,4BAAQC,UAAWC,IAAOC,OAAQC,KAAK,MAAMC,QAASL,GAAtD,SCCWM,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,oCAAUJ,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,GACX,iDAAuBC,EAAqB,OCF1CC,EAAqB,SAACH,EAAKF,EAAMC,GAAZ,OAAwBC,EAAMF,EAAOC,GAE1DK,EAAkC,SAACJ,EAAKF,EAAMC,GAClD,IAAME,EAAQE,EAAmBH,EAAKF,EAAMC,GAC5C,OAAOE,EAAQ,EAAII,KAAKC,MAAOR,EAAOG,EAAS,KAAO,GA+CzCM,E,4MA3CbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,YAAc,YAA2B,IAAdd,EAAa,EAAvBe,OAAUf,KACzB,EAAKgB,SAAL,eAAiBhB,EAAO,EAAKa,MAAMb,GAAQ,K,uDAGnC,IAAD,EACwBiB,KAAKJ,MAA5BR,EADD,EACCA,IAAKF,EADN,EACMA,KAAMC,EADZ,EACYA,QAEbE,EAAQE,EAAmBH,EAAKF,EAAMC,GAE5C,OACE,oCACE,kBAAC,EAAD,CAASb,MAAM,yBACb,kBAAC,EAAD,CAAiBK,gBAAiBqB,KAAKH,eAGzC,kBAAC,EAAD,CAASvB,MAAM,cACZe,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBE,EAClBJ,EACAF,EACAC,KAIJ,kBAAC,EAAD,CAAcV,QAAQ,4B,GApChBwB,aCVlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.52d231a7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"feedbackOptions_button__15QTd\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"./feedbackOptions.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n  <>\r\n    <button className={styled.button} name=\"good\" onClick={onLeaveFeedback}>\r\n      Good\r\n    </button>\r\n    <button className={styled.button} name=\"neutral\" onClick={onLeaveFeedback}>\r\n      Neutral\r\n    </button>\r\n    <button className={styled.button} name=\"bad\" onClick={onLeaveFeedback}>\r\n      Bad\r\n    </button>\r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {positivePercentage + \"%\"}</p>\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport Section from \"../Section\";\r\nimport Notification from \"../Notification\";\r\nimport FeedbackOptions from \"../FeedbackOptions\";\r\nimport Statistics from \"../Statistics\";\r\n\r\nconst countTotalFeedback = (bad, good, neutral) => bad + good + neutral;\r\n\r\nconst countPositiveFeedbackPercentage = (bad, good, neutral) => {\r\n  const total = countTotalFeedback(bad, good, neutral);\r\n  return total > 0 ? Math.floor((good / total) * 100) : 0;\r\n};\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleClick = ({ target: { name } }) => {\r\n    this.setState({ [name]: this.state[name] + 1 });\r\n  };\r\n\r\n  render() {\r\n    const { bad, good, neutral } = this.state;\r\n\r\n    const total = countTotalFeedback(bad, good, neutral);\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions onLeaveFeedback={this.handleClick} />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {total > 0 ? (\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              positivePercentage={countPositiveFeedbackPercentage(\r\n                bad,\r\n                good,\r\n                neutral\r\n              )}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}